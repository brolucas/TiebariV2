{"version":3,"sources":["./src/app/reset-password/reset-password.page.html","./src/app/reset-password/reset-password-routing.module.ts","./src/app/reset-password/reset-password.module.ts","./src/app/reset-password/reset-password.page.scss","./src/app/reset-password/reset-password.page.ts"],"names":[],"mappings":"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","file":"reset-password-reset-password-module-es2015.js","sourcesContent":["export default \"<ion-content padding>\\n  <form [formGroup]=\\\"resetPasswordForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Email</ion-label>\\n      <ion-input\\n              formControlName=\\\"email\\\"\\n              type=\\\"email\\\"\\n              placeholder=\\\"Your email address\\\"\\n              [class.invalid]=\\\"!resetPasswordForm.controls['email'].valid &&\\n        resetPasswordForm.controls['email'].touched\\\"\\n      >\\n      </ion-input>\\n    </ion-item>\\n    <ion-item\\n            class=\\\"error-message\\\"\\n            *ngIf=\\\"!resetPasswordForm.controls['email'].valid &&\\n      resetPasswordForm.controls['email'].touched\\\"\\n    >\\n      <ion-label>Please enter a valid email.</ion-label>\\n    </ion-item>\\n\\n    <ion-button\\n            expand=\\\"block\\\"\\n            (click)=\\\"resetPassword(resetPasswordForm)\\\"\\n            [disabled]=\\\"!resetPasswordForm.valid\\\"\\n    >\\n      Reset your Password\\n    </ion-button>\\n  </form>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPasswordPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPasswordPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPasswordPageRoutingModule } from './reset-password-routing.module';\n\nimport { ResetPasswordPage } from './reset-password.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResetPasswordPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ResetPasswordPage]\n})\nexport class ResetPasswordPageModule {}\n","export default \"form {\\n  margin-bottom: 32px;\\n}\\nform button {\\n  margin-top: 20px !important;\\n}\\np {\\n  font-size: 0.8em;\\n  color: #d2d2d2;\\n}\\nion-label {\\n  margin-left: 5px;\\n}\\nion-input {\\n  padding: 5px;\\n}\\n.invalid {\\n  border-bottom: 1px solid #ff6153;\\n}\\n.error-message {\\n  min-height: 2.2rem;\\n}\\n.error-message ion-label {\\n  margin: 2px 0;\\n  font-size: 60%;\\n  color: #ff6153;\\n}\\n.error-message .item-inner {\\n  border-bottom: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J5dWt1L0J1cmVhdS9hL1RpZWJhcmlWMi9UaWViYXJpQXBwL3NyYy9hcHAvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQucGFnZS5zY3NzIiwic3JjL2FwcC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBQTtBQ0NGO0FEQUU7RUFDRSwyQkFBQTtBQ0VKO0FERUE7RUFDRSxnQkFBQTtFQUNBLGNBQUE7QUNDRjtBREVBO0VBQ0UsZ0JBQUE7QUNDRjtBREVBO0VBQ0UsWUFBQTtBQ0NGO0FERUE7RUFDRSxnQ0FBQTtBQ0NGO0FERUE7RUFDRSxrQkFBQTtBQ0NGO0FEQUU7RUFDRSxhQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7QUNFSjtBREFFO0VBQ0UsMkJBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuICBidXR0b24ge1xuICAgIG1hcmdpbi10b3A6IDIwcHggIWltcG9ydGFudDtcbiAgfVxufVxuXG5wIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgY29sb3I6ICNkMmQyZDI7XG59XG5cbmlvbi1sYWJlbCB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5cbmlvbi1pbnB1dCB7XG4gIHBhZGRpbmc6IDVweDtcbn1cblxuLmludmFsaWQge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmNjE1Mztcbn1cblxuLmVycm9yLW1lc3NhZ2Uge1xuICBtaW4taGVpZ2h0OiAyLjJyZW07XG4gIGlvbi1sYWJlbCB7XG4gICAgbWFyZ2luOiAycHggMDtcbiAgICBmb250LXNpemU6IDYwJTtcbiAgICBjb2xvcjogI2ZmNjE1MztcbiAgfVxuICAuaXRlbS1pbm5lciB7XG4gICAgYm9yZGVyLWJvdHRvbTogMCAhaW1wb3J0YW50O1xuICB9XG59XG4iLCJmb3JtIHtcbiAgbWFyZ2luLWJvdHRvbTogMzJweDtcbn1cbmZvcm0gYnV0dG9uIHtcbiAgbWFyZ2luLXRvcDogMjBweCAhaW1wb3J0YW50O1xufVxuXG5wIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgY29sb3I6ICNkMmQyZDI7XG59XG5cbmlvbi1sYWJlbCB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5cbmlvbi1pbnB1dCB7XG4gIHBhZGRpbmc6IDVweDtcbn1cblxuLmludmFsaWQge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmNjE1Mztcbn1cblxuLmVycm9yLW1lc3NhZ2Uge1xuICBtaW4taGVpZ2h0OiAyLjJyZW07XG59XG4uZXJyb3ItbWVzc2FnZSBpb24tbGFiZWwge1xuICBtYXJnaW46IDJweCAwO1xuICBmb250LXNpemU6IDYwJTtcbiAgY29sb3I6ICNmZjYxNTM7XG59XG4uZXJyb3ItbWVzc2FnZSAuaXRlbS1pbm5lciB7XG4gIGJvcmRlci1ib3R0b206IDAgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { AlertController } from '@ionic/angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.page.html',\n  styleUrls: ['./reset-password.page.scss'],\n})\nexport class ResetPasswordPage implements OnInit {\n  public resetPasswordForm: FormGroup;\n  constructor(\n      private authService: AuthService,\n      private alertCtrl: AlertController,\n      private formBuilder: FormBuilder,\n      private router: Router\n  ) { this.resetPasswordForm = this.formBuilder.group({\n    email: [\n      '',\n      Validators.compose([Validators.required, Validators.email]),\n    ],\n  }); }\n\n  ngOnInit() {\n  }\n  resetPassword(resetPasswordForm: FormGroup): void {\n    if (!resetPasswordForm.valid) {\n      console.log(\n          'Form is not valid yet, current value:', resetPasswordForm.value\n      );\n    } else {\n      const email: string = resetPasswordForm.value.email;\n      this.authService.resetPassword(email).then(\n          async () => {\n            const alert = await this.alertCtrl.create({\n              message: 'Check your email for a password reset link',\n              buttons: [\n                {\n                  text: 'Ok',\n                  role: 'cancel',\n                  handler: () => {\n                    this.router.navigateByUrl('login');\n                  },\n                },\n              ],\n            });\n            await alert.present();\n          },\n          async error => {\n            const errorAlert = await this.alertCtrl.create({\n              message: error.message,\n              buttons: [{ text: 'Ok', role: 'cancel' }],\n            });\n            await errorAlert.present();\n          }\n      );\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}