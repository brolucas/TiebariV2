{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-checkbox-md.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\n\nconst Checkbox = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = () => {\n            this.setFocus();\n            this.checked = !this.checked;\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, indeterminate, disabled, checked, value, color, el } = this;\n        const labelId = inputId + '-lbl';\n        const mode = getIonMode(this);\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        let path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'checkbox-checked': checked, 'checkbox-disabled': disabled, 'checkbox-indeterminate': indeterminate, 'interactive': true }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \":host{--background-checked:var(--ion-color-primary,#3880ff);--border-color-checked:var(--ion-color-primary,#3880ff);--checkmark-color:var(--ion-color-primary-contrast,#fff);--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:1;opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.51);--background:var(--ion-item-background,var(--ion-background-color,#fff));--transition:background 180ms cubic-bezier(0.4,0,0.2,1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30;stroke-width:3}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\"; }\n};\nlet checkboxIds = 0;\n\nexport { Checkbox as ion_checkbox };\n"],"sourceRoot":"webpack:///","file":"18-es5.js"}